#!/usr/bin/python

import requests
from pymongo import MongoClient
from lxml import html
from selenium import webdriver
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from datetime import datetime
import time

def spider(url):
    r = requests.get(
        url,
        headers={'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:39.0) Gecko/20100101 Firefox/39.0', 'referer': 'https://www.ebates.com/index.htm'}
    )
    return r

def sel_spider(url):
    dcap = dict(DesiredCapabilities.PHANTOMJS)
    dcap["phantomjs.page.settings.userAgent"] = ("Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/53 (KHTML, like Gecko) Chrome/15.0.87")
    driver = webdriver.PhantomJS(desired_capabilities=dcap)
    driver.get(url)
    time.sleep(5)
    return driver

def double_cash_back(collection, file_h):
    url = 'https://www.ebates.com/athleisure-deals.htm'
    response = spider(url)
    data = html.fromstring(response.text)
    for e in  data.xpath('.//ul/li/a[@class="bblk nohover"]'):
        item = dict()
        item['url'] = e.xpath('./@href')[0].strip('/')
        item['cashback'] = e.xpath('./span/text()')[1].strip().split(' ')[0]
        item['timestamp'] = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S")
        collection.insert(item)
        line = item['url'] + ',' + item['cashback'] + ',' + item['timestamp'] + '\n'
        file_h.write(line)
        print line.strip()

def hot_deals(collection, file_h):
    url = 'https://www.ebates.com/deals.htm'
    response = spider(url)
    data = html.fromstring(response.text)
    for e in data.xpath('.//div[@id="coupons"]/div[@class="coupon-blk logo-blk blk border-b pad-30"]'):
        item = dict()
        item['url'] = e.xpath('./div[@class="merchlogo flt"]/a/@href')[0].strip('/')
        item['cashback'] = e.xpath('./ul/li/span/text()')[1].split('Cash')[0].strip().strip('+').replace('Up to', '').strip()
        item['timestamp'] = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S")
        collection.insert(item)
        line = item['url'] + ',' + item['cashback'] + ',' + item['timestamp'] + '\n'
        file_h.write(line)
        print line.strip()

def luxury(collection, file_h):
    url = 'https://www.ebates.com/luxury/all-stores.htm'
    driver = sel_spider(url)
    for e in driver.find_elements_by_xpath('.//ul[@class="store-sort"]/li'):
        item = dict()
        url = e.find_element_by_xpath('./a').get_attribute('href').split('/')
        if 'mytheresa-com' in url: item['url'] = 'mytheresa.com' 
        else: item['url'] =  e.find_element_by_xpath('./a').get_attribute('href').split('/')[-1]
        item['cashback'] = e.find_elements_by_xpath('./a/span')[1].text.replace('Up to ', '').split(' ')[0].strip()
        item['timestamp'] = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S")
        if item['cashback'] == 'No': continue
        collection.insert(item)
        line = item['url'] + ',' + item['cashback'] + ',' + item['timestamp'] + '\n'
        file_h.write(line)
        print line.strip()

def in_store(collection, file_h):
    url = 'https://www.ebates.com/in-store.htm'
    driver = sel_spider(url)
    for e in driver.find_elements_by_xpath('.//div[@id="clo-offers-cont"]/div'):
        item = dict()
        item['url'] = e.find_element_by_xpath('./img').get_attribute('title')
        item['cashback'] = e.find_elements_by_xpath('./div')[0].text.split(' ')[0]
        item['timestamp'] = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S")
        collection.insert(item)
        line = item['url'] + ',' + item['cashback'] + ',' + item['timestamp'] + '\n'
        file_h.write(line)
        print line.strip()

    driver.quit()

def main():
    profile = "mongodb://mongodb0.example.net:27017"
    client = MongoClient()
    db = client.ebates
    coll = db.dataset

    fn = 'ebates_%s.csv'%datetime.utcnow().strftime('%Y_%m_%d')
    fh = open(fn, 'w')
    header = 'url,cashback,date_time\n'
    fh.write(header)

    double_cash_back(coll, fh)
    time.sleep(5)
    hot_deals(coll, fh)
    time.sleep(5)
    luxury(coll, fh)
    time.sleep(5)
    in_store(coll, fh)

    client.close()
    fh.close()

main()

